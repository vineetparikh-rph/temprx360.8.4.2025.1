// Prisma schema file

datasource db {
  provider = "sqlite" // change if using another database like postgresql or mysql
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// User model
model User {
  id             Int            @id @default(autoincrement())
  email          String         @unique
  name           String?
  hashedPassword String?
  role           String?        // e.g., "admin", "user"
  userPharmacies UserPharmacy[]

  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt

  // add other existing fields here if needed
}

// Pharmacy model
model Pharmacy {
  id             Int            @id @default(autoincrement())
  code           String         @unique
  name           String
  lastSeen       DateTime?
  email          String?
  faxNumber      String?
  licenseNumber  String?
  deaNumber      String?
  npiNumber      String?
  ncpdpNumber    String?
  ownerName      String?

  gateways       Gateway[]
  userPharmacies UserPharmacy[]

  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt

  // add other existing fields here if needed
}

// Gateway model
model Gateway {
  id           Int       @id @default(autoincrement())
  gatewayId    String    @unique
  name         String
  lastSeen     DateTime?
  pharmacyId   Int
  pharmacy     Pharmacy  @relation(fields: [pharmacyId], references: [id])
  sensors      Sensor[]

  createdAt    DateTime  @default(now())
  updatedAt    DateTime?  @updatedAt
}

// Sensor model
model Sensor {
  id                     Int       @id @default(autoincrement())
  sensorId               String    @unique
  name                   String
  lastReadingTemperature Float?
  lastReadingHumidity    Float?
  lastReadingTimestamp   DateTime?
  gatewayId              Int
  gateway                Gateway   @relation(fields: [gatewayId], references: [id])

  createdAt              DateTime  @default(now())
  updatedAt              DateTime  @updatedAt
}

// UserPharmacy junction model
model UserPharmacy {
  id         Int      @id @default(autoincrement())
  userId     Int
  pharmacyId Int
  user       User     @relation(fields: [userId], references: [id])
  pharmacy   Pharmacy @relation(fields: [pharmacyId], references: [id])

  @@unique([userId, pharmacyId])
}
